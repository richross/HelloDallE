@using HelloDallE.Models;
@inject IDallEComms DallEComms

<div class="border border-primary text-center">
    <div class="bg-light">
        <h3>@Model.QuestionName</h3>
    </div>
    <div class="border border-2 rounded-3 border-black">
        <div class="text-center gap-lg-5">@Model.QuestionText</div>
        <div class="container">
            <div class="row">
                @foreach (var Answer in Model.Answers)
                {
                    <div class="col-2 d-grid">
                        <button @onclick="(e => CaptureResponse(e, Answer.AnswerValue))" class="btn-primary btn-outline-success @(Answer.IsActive ? "active" : "")">@Answer.AnswerText</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public QuestionViewModel? Model { get; set; }
    // private string sectionNumber; //used to detemrine the number of sections based on the number of questions

    protected override void OnInitialized()
    {
        // sectionNumber = "col-" + Convert.ToString(12 / Model.Answers.Count);
        base.OnInitialized();
    }

    private void CaptureResponse(MouseEventArgs e, string value)
    {
        var promptString = $"{Model.QuestionPrompt}";

        DallEComms.PromptText += promptString.Replace("{value}", value);

        //set the button to active and confirm other buttons are not active.
        foreach (var answer in Model.Answers)
        {
            if (answer.AnswerValue == value)
            {
                answer.IsActive = true;
            }
            else
            {
                answer.IsActive = false;
            }
        }
        
    }
}