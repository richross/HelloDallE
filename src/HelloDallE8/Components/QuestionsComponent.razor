@using HelloDallE8.Models;
@using HelloDallE8.Services;

@inject IDallEComms DallEComms;
@inject ResponseState questionState;

@rendermode InteractiveServer

<FluentCard>
    @* <div class="border border-primary text-center"> *@
        <div class="bg-light">
            <h3>@Model.QuestionName</h3>
        </div>
                    @foreach (var Answer in Model.Answers)
                    {
                            <FluentButton Appearance="@Appearance.Accent" @onclick="(e => CaptureResponse(e, Answer.AnswerValue))">@Answer.AnswerText</FluentButton>
                    }
@*                 </div>
            </div>
        </div> *@
    @* </div> *@
</FluentCard>

@code {
    [Parameter]
    public QuestionViewModel? Model { get; set; }
    private string sectionNumber; //used to detemrine the number of sections based on the number of questions

    protected override void OnInitialized()
    {
        sectionNumber = "col-" + Convert.ToString(12 / Model.Answers.Count);
        base.OnInitialized();
    }

    private void CaptureResponse(MouseEventArgs e, string value)
    {
        //set the button to active and confirm other buttons are not active.
        foreach (var answer in Model.Answers)
        {
            if (answer.AnswerValue == value)
            {
                answer.IsActive = true;
                questionState.AddOrUpdateResponse(Model.QuestionName, value);
            }
            else
            {
                answer.IsActive = false;
            }
        }
    }
}
